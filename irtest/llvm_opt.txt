declare i32 @getint()
declare void @putint(i32)
declare void @putstr(i8*)
declare void @putch(i32)
@b = dso_local constant [3 x i32] [i32 1, i32 2, i32 3]
@c = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 4], [2 x i32] [i32 2, i32 3]]
@b1 = dso_local global [4 x i32] [i32 1, i32 3, i32 5, i32 7]
@c1 = dso_local global [3 x [3 x i32]] [[3 x i32] [i32 1, i32 2, i32 3], [3 x i32] [i32 4, i32 5, i32 6], [3 x i32] [i32 7, i32 8, i32 9]]
@str.0 = private unnamed_addr constant [13 x i8] c"error judge\0A\00"
@str.1 = private unnamed_addr constant [13 x i8] c"right judge\0A\00"
@str.2 = private unnamed_addr constant [3 x i8] c"1\0A\00"
@str.3 = private unnamed_addr constant [3 x i8] c"2\0A\00"
@str.4 = private unnamed_addr constant [3 x i8] c"4\0A\00"
@str.5 = private unnamed_addr constant [3 x i8] c"3\0A\00"
@str.6 = private unnamed_addr constant [10 x i8] c"in func2\0A\00"
@str.7 = private unnamed_addr constant [10 x i8] c"20373377\0A\00"
@str.8 = private unnamed_addr constant [11 x i8] c"5: tmp is \00"
@str.9 = private unnamed_addr constant [13 x i8] c"6: a2*tmp = \00"
@str.10 = private unnamed_addr constant [8 x i8] c"7: i = \00"
@str.11 = private unnamed_addr constant [10 x i8] c", tmp is \00"
@str.12 = private unnamed_addr constant [9 x i8] c"func1 = \00"
define dso_local i32 @func1(i32 %ar1, i32* %ar3, [3 x i32]* %ar5) {
func1_b0:
  %i11 = getelementptr i32, i32* %ar3, i32 1
  %i12 = load i32, i32* %i11
  %i15 = getelementptr [3 x i32], [3 x i32]* %ar5, i32 1, i32 1
  %i16 = load i32, i32* %i15
  %i19 = icmp ne i32 0, 0
  br i1 %i19, label %func1_b20, label %func1_b18
func1_b17:
  %i22 = getelementptr [13 x i8], [13 x i8]* @str.0, i32 0, i32 0
  call void @putstr(i8* %i22)
  br label %func1_b18
func1_b18:
  %i26 = icmp ne i32 1, 0
  br i1 %i26, label %func1_b23, label %func1_b25
func1_b20:
  %i21 = icmp ne i32 1, 0
  br i1 %i21, label %func1_b17, label %func1_b18
func1_b23:
  %i28 = getelementptr [13 x i8], [13 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i28)
  br label %func1_b24
func1_b24:
  %i33 = icmp sgt i32 %ar1, %i12
  br i1 %i33, label %func1_b29, label %func1_b30
func1_b25:
  %i27 = icmp ne i32 0, 0
  br i1 %i27, label %func1_b23, label %func1_b24
func1_b29:
  %i34 = getelementptr [3 x i8], [3 x i8]* @str.2, i32 0, i32 0
  call void @putstr(i8* %i34)
  br label %func1_b30
func1_b30:
  %i37 = icmp eq i32 1, 0
  br i1 %i37, label %func1_b35, label %func1_b36
func1_b35:
  %i38 = getelementptr [3 x i8], [3 x i8]* @str.3, i32 0, i32 0
  call void @putstr(i8* %i38)
  br label %func1_b36
func1_b36:
  %i43 = icmp sle i32 %i12, %i16
  br i1 %i43, label %func1_b39, label %func1_b40
func1_b39:
  %i44 = getelementptr [3 x i8], [3 x i8]* @str.4, i32 0, i32 0
  call void @putstr(i8* %i44)
  br label %func1_b40
func1_b40:
  %i49 = icmp sge i32 %ar1, %i16
  br i1 %i49, label %func1_b45, label %func1_b46
func1_b45:
  %i50 = getelementptr [3 x i8], [3 x i8]* @str.5, i32 0, i32 0
  call void @putstr(i8* %i50)
  br label %func1_b46
func1_b46:
  ret i32 2037
}
define dso_local void @func2() {
func2_b0:
  %i1 = getelementptr [10 x i8], [10 x i8]* @str.6, i32 0, i32 0
  call void @putstr(i8* %i1)
  ret void
}
define dso_local i32 @main() {
main_b0:
  %i1 = getelementptr [10 x i8], [10 x i8]* @str.7, i32 0, i32 0
  call void @putstr(i8* %i1)
  %i4 = mul i32 3, 4
  %i8 = mul i32 %i4, 6
  %i9 = mul i32 5, 12
  %i13 = getelementptr [11 x i8], [11 x i8]* @str.8, i32 0, i32 0
  call void @putstr(i8* %i13)
  call void @putint(i32 687)
  call void @putch(i32 10)
  %i16 = mul i32 %i9, 687
  %i17 = getelementptr [13 x i8], [13 x i8]* @str.9, i32 0, i32 0
  call void @putstr(i8* %i17)
  call void @putint(i32 %i16)
  call void @putch(i32 10)
  br label %main_b19
main_b19:
  %p0 = phi i32 [ 0, %main_b0 ], [ %i27, %main_b33 ], [ %i27, %main_b29 ]
  %i24 = add i32 1, 6
  %i25 = icmp ne i32 %p0, %i24
  b