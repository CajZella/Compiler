declare i32 @getint()
declare void @putint(i32)
declare void @putstr(i8*)
declare void @putch(i32)
@FIB_M = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 1], [2 x i32] [i32 1, i32 0]]
@N = dso_local constant i32 9
@FIB_V = dso_local constant [2 x i32] [i32 1, i32 1]
@a = dso_local global i32 5
@b = dso_local global i32 7
@c = dso_local global i32 0
@lis = dso_local global [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@str.0 = private unnamed_addr constant [8 x i8] c"a is [[\00"
@str.1 = private unnamed_addr constant [3 x i8] c", \00"
@str.2 = private unnamed_addr constant [5 x i8] c"], [\00"
@str.3 = private unnamed_addr constant [4 x i8] c"]]\0A\00"
@str.4 = private unnamed_addr constant [10 x i8] c"20373743\0A\00"
@str.5 = private unnamed_addr constant [8 x i8] c"input: \00"
@str.6 = private unnamed_addr constant [18 x i8] c"get matrix after \00"
@str.7 = private unnamed_addr constant [21 x i8] c" multplFIB_M turns!\0A\00"
@str.8 = private unnamed_addr constant [25 x i8] c"given original vector: [\00"
@str.9 = private unnamed_addr constant [3 x i8] c"]\0A\00"
@str.10 = private unnamed_addr constant [19 x i8] c"get next vector: [\00"
@str.11 = private unnamed_addr constant [4 x i8] c"]!\0A\00"
@str.12 = private unnamed_addr constant [17 x i8] c"a and b is true\0A\00"
@str.13 = private unnamed_addr constant [11 x i8] c"c is true\0A\00"
@str.14 = private unnamed_addr constant [16 x i8] c"a || c is true\0A\00"
@str.15 = private unnamed_addr constant [19 x i8] c"sum of a, b, c is \00"
@str.16 = private unnamed_addr constant [21 x i8] c"sum of lis front id \00"
define dso_local void @vector_mult(i32* %ar1, i32* %ar3) {
vector_mult_b0:
  %i2 = alloca i32*
  store i32* %ar1, i32** %i2
  %i4 = alloca i32*
  store i32* %ar3, i32** %i4
  %i5 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 0
  %i6 = load i32, i32* %i5
  %i7 = load i32*, i32** %i4
  %i8 = getelementptr i32, i32* %i7, i32 0
  %i9 = load i32, i32* %i8
  %i10 = mul i32 %i6, %i9
  %i11 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 1
  %i12 = load i32, i32* %i11
  %i13 = load i32*, i32** %i4
  %i14 = getelementptr i32, i32* %i13, i32 1
  %i15 = load i32, i32* %i14
  %i16 = mul i32 %i12, %i15
  %i17 = add i32 %i10, %i16
  %i18 = load i32*, i32** %i2
  %i19 = getelementptr i32, i32* %i18, i32 0
  store i32 %i17, i32* %i19
  %i20 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 1, i32 0
  %i21 = load i32, i32* %i20
  %i22 = load i32*, i32** %i4
  %i23 = getelementptr i32, i32* %i22, i32 0
  %i24 = load i32, i32* %i23
  %i25 = mul i32 %i21, %i24
  %i26 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 1, i32 1
  %i27 = load i32, i32* %i26
  %i28 = load i32*, i32** %i4
  %i29 = getelementptr i32, i32* %i28, i32 1
  %i30 = load i32, i32* %i29
  %i31 = mul i32 %i27, %i30
  %i32 = add i32 %i25, %i31
  %i33 = load i32*, i32** %i2
  %i34 = getelementptr i32, i32* %i33, i32 1
  store i32 %i32, i32* %i34
  ret void
}
define dso_local void @matrix_mult([2 x i32]* %ar36, [2 x i32]* %ar38) {
matrix_mult_b35:
  %i37 = alloca [2 x i32]*
  store [2 x i32]* %ar36, [2 x i32]** %i37
  %i39 = alloca [2 x i32]*
  store [2 x i32]* %ar38, [2 x i32]** %i39
  %i40 = alloca [2 x i32]
  %i41 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 1
  %i42 = load i32, i32* %i41
  %i43 = getelementptr [2 x i32], [2 x i32]* %i40, i32 0, i32 0
  store i32 %i42, i32* %i43
  %i44 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 0
  %i45 = load i32, i32* %i44
  %i46 = getelementptr [2 x i32], [2 x i32]* %i40, i32 0, i32 1
  store i32 %i45, i32* %i46
  %i47 = load [2 x i32]*, [2 x i32]** %i39
  %i48 = getelementptr [2 x i32], [2 x i32]* %i47, i32 0, i32 0
  %i49 = load i32, i32* %i48
  %i50 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 0
  %i51 = load i32, i32* %i50
  %i52 = mul i32 %i49, %i51
  %i53 = load [2 x i32]*, [2 x i32]** %i39
  %i54 = getelementptr [2 x i32], [2 x i32]* %i53, i32 0, i32 1
  %i55 = load i32, i32* %i54
  %i56 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 1, i32 0
  %i57 = load i32, i32* %i56
  %i58 = mul i32 %i55, %i57
  %i59 = add i32 %i52, %i58
  %i60 = load [2 x i32]*, [2 x i32]** %i37
  %i61 = getelementptr [2 x i32], [2 x i32]* %i60, i32 0, i32 0
  store i32 %i59, i32* %i61
  %i62 = load [2 x i32]*, [2 x i32]** %i39
  %i63 = getelementptr [2 x i32], [2 x i32]* %i62, i32 0, i32 0
  %i64 = load i32, i32* %i63
  %i65 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 1
  %i66 = load i32, i32* %i65
  %i67 = mul i32 %i64, %i66
  %i68 = load [2 x i32]*, [2 x i32]** %i39
  %i69 = getelementptr [2 x i32], [2 x i32]* %i68, i32 0, i32 1
  %i70 = load i32, i32* %i69
  %i71 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 1, i32 1
  %i72 = load i32, i32* %i71
  %i73 = mul i32 %i70, %i72
  %i74 = add i32 %i67, %i73
  %i75 = load [2 x i32]*, [2 x i32]** %i37
  %i76 = getelementptr [2 x i32], [2 x i32]* %i75, i32 0, i32 1
  store i32 %i74, i32* %i76
  %i77 = load [2 x i32]*, [2 x i32]** %i39
  %i78 = getelementptr [2 x i32], [2 x i32]* %i77, i32 1, i32 0
  %i79 = load i32, i32* %i78
  %i80 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 0
  %i81 = load i32, i32* %i80
  %i82 = mul i32 %i79, %i81
  %i83 = load [2 x i32]*, [2 x i32]** %i39
  %i84 = getelementptr [2 x i32], [2 x i32]* %i83, i32 1, i32 1
  %i85 = load i32, i32* %i84
  %i86 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 1, i32 0
  %i87 = load i32, i32* %i86
  %i88 = mul i32 %i85, %i87
  %i89 = add i32 %i82, %i88
  %i90 = load [2 x i32]*, [2 x i32]** %i37
  %i91 = getelementptr [2 x i32], [2 x i32]* %i90, i32 1, i32 0
  store i32 %i89, i32* %i91
  %i92 = load [2 x i32]*, [2 x i32]** %i39
  %i93 = getelementptr [2 x i32], [2 x i32]* %i92, i32 1, i32 0
  %i94 = load i32, i32* %i93
  %i95 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 0, i32 1
  %i96 = load i32, i32* %i95
  %i97 = mul i32 %i94, %i96
  %i98 = load [2 x i32]*, [2 x i32]** %i39
  %i99 = getelementptr [2 x i32], [2 x i32]* %i98, i32 1, i32 1
  %i100 = load i32, i32* %i99
  %i101 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @FIB_M, i32 0, i32 1, i32 1
  %i102 = load i32, i32* %i101
  %i103 = mul i32 %i100, %i102
  %i104 = add i32 %i97, %i103
  %i105 = load [2 x i32]*, [2 x i32]** %i37
  %i106 = getelementptr [2 x i32], [2 x i32]* %i105, i32 1, i32 1
  store i32 %i104, i32* %i106
  ret void
}
define dso_local i32 @cal_fib_matrix() {
cal_fib_matrix_b107:
  %i108 = alloca i32
  store i32 0, i32* %i108
  %i109 = alloca [2 x [2 x i32]]
  %i110 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 0, i32 0
  store i32 1, i32* %i110
  %i111 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 0, i32 1
  store i32 0, i32* %i111
  %i112 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 1, i32 0
  store i32 0, i32* %i112
  %i113 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 1, i32 1
  store i32 1, i32* %i113
  %i114 = alloca [2 x [2 x i32]]
  br label %cal_fib_matrix_b115
cal_fib_matrix_b115:
  %i118 = load i32, i32* %i108
  %i119 = load i32, i32* @N
  %i120 = icmp slt i32 %i118, %i119
  br i1 %i120, label %cal_fib_matrix_b116, label %cal_fib_matrix_b117
cal_fib_matrix_b116:
  %i121 = alloca i32
  store i32 0, i32* %i121
  %i122 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i114, i32 0, i32 0
  %i123 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 0
  call void @matrix_mult([2 x i32]* %i122, [2 x i32]* %i123)
  br label %cal_fib_matrix_b124
cal_fib_matrix_b117:
  %i159 = load i32, i32* %i108
  ret i32 %i159
cal_fib_matrix_b124:
  %i127 = load i32, i32* %i121
  %i128 = icmp slt i32 %i127, 4
  br i1 %i128, label %cal_fib_matrix_b125, label %cal_fib_matrix_b126
cal_fib_matrix_b125:
  %i129 = load i32, i32* %i121
  %i130 = sdiv i32 %i129, 2
  %i131 = load i32, i32* %i121
  %i132 = srem i32 %i131, 2
  %i133 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i114, i32 0, i32 %i130, i32 %i132
  %i134 = load i32, i32* %i133
  %i135 = load i32, i32* %i121
  %i136 = sdiv i32 %i135, 2
  %i137 = load i32, i32* %i121
  %i138 = srem i32 %i137, 2
  %i139 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 %i136, i32 %i138
  store i32 %i134, i32* %i139
  %i140 = load i32, i32* %i121
  %i141 = add i32 %i140, 1
  store i32 %i141, i32* %i121
  br label %cal_fib_matrix_b124
cal_fib_matrix_b126:
  %i142 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 0, i32 0
  %i143 = load i32, i32* %i142
  %i144 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 0, i32 1
  %i145 = load i32, i32* %i144
  %i146 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 1, i32 0
  %i147 = load i32, i32* %i146
  %i148 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %i109, i32 0, i32 1, i32 1
  %i149 = load i32, i32* %i148
  %i150 = getelementptr [8 x i8], [8 x i8]* @str.0, i32 0, i32 0
  call void @putstr(i8* %i150)
  call void @putint(i32 %i143)
  %i151 = getelementptr [3 x i8], [3 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i151)
  call void @putint(i32 %i145)
  %i152 = getelementptr [5 x i8], [5 x i8]* @str.2, i32 0, i32 0
  call void @putstr(i8* %i152)
  call void @putint(i32 %i147)
  %i153 = getelementptr [3 x i8], [3 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i153)
  call void @putint(i32 %i149)
  %i154 = getelementptr [4 x i8], [4 x i8]* @str.3, i32 0, i32 0
  call void @putstr(i8* %i154)
  %i155 = load i32, i32* %i108
  %i156 = add i32 %i155, 1
  %i157 = sub i32 0, %i156
  %i158 = sub i32 0, %i157
  store i32 %i158, i32* %i108
  br label %cal_fib_matrix_b115
}
define dso_local i32 @sum(i32 %ar161, i32 %ar163, i32 %ar165) {
sum_b160:
  %i162 = alloca i32
  store i32 %ar161, i32* %i162
  %i164 = alloca i32
  store i32 %ar163, i32* %i164
  %i166 = alloca i32
  store i32 %ar165, i32* %i166
  %i167 = load i32, i32* %i162
  %i168 = load i32, i32* %i164
  %i169 = add i32 %i167, %i168
  %i170 = load i32, i32* %i166
  %i171 = add i32 %i169, %i170
  ret i32 %i171
}
define dso_local i32 @main() {
main_b172:
  %i173 = getelementptr [10 x i8], [10 x i8]* @str.4, i32 0, i32 0
  call void @putstr(i8* %i173)
  %i174 = alloca i32
  %i175 = call i32 @getint()
  store i32 %i175, i32* %i174
  %i176 = load i32, i32* %i174
  %i177 = getelementptr [8 x i8], [8 x i8]* @str.5, i32 0, i32 0
  call void @putstr(i8* %i177)
  call void @putint(i32 %i176)
  call void @putch(i32 10)
  %i178 = alloca i32
  %i179 = call i32 @cal_fib_matrix()
  store i32 %i179, i32* %i178
  %i180 = load i32, i32* %i178
  %i181 = getelementptr [18 x i8], [18 x i8]* @str.6, i32 0, i32 0
  call void @putstr(i8* %i181)
  call void @putint(i32 %i180)
  %i182 = getelementptr [21 x i8], [21 x i8]* @str.7, i32 0, i32 0
  call void @putstr(i8* %i182)
  %i183 = alloca [2 x i32]
  %i184 = getelementptr [2 x i32], [2 x i32]* %i183, i32 0, i32 0
  store i32 13, i32* %i184
  %i185 = getelementptr [2 x i32], [2 x i32]* %i183, i32 0, i32 1
  store i32 8, i32* %i185
  %i186 = alloca [2 x i32]
  %i187 = getelementptr [2 x i32], [2 x i32]* %i186, i32 0, i32 0
  %i188 = getelementptr [2 x i32], [2 x i32]* %i183, i32 0, i32 0
  call void @vector_mult(i32* %i187, i32* %i188)
  %i189 = getelementptr [2 x i32], [2 x i32]* %i183, i32 0, i32 0
  %i190 = load i32, i32* %i189
  %i191 = getelementptr [2 x i32], [2 x i32]* %i183, i32 0, i32 1
  %i192 = load i32, i32* %i191
  %i193 = getelementptr [25 x i8], [25 x i8]* @str.8, i32 0, i32 0
  call void @putstr(i8* %i193)
  call void @putint(i32 %i190)
  %i194 = getelementptr [3 x i8], [3 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i194)
  call void @putint(i32 %i192)
  %i195 = getelementptr [3 x i8], [3 x i8]* @str.9, i32 0, i32 0
  call void @putstr(i8* %i195)
  %i196 = getelementptr [2 x i32], [2 x i32]* %i186, i32 0, i32 0
  %i197 = load i32, i32* %i196
  %i198 = getelementptr [2 x i32], [2 x i32]* %i186, i32 0, i32 1
  %i199 = load i32, i32* %i198
  %i200 = getelementptr [19 x i8], [19 x i8]* @str.10, i32 0, i32 0
  call void @putstr(i8* %i200)
  call void @putint(i32 %i197)
  %i201 = getelementptr [3 x i8], [3 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i201)
  call void @putint(i32 %i199)
  %i202 = getelementptr [4 x i8], [4 x i8]* @str.11, i32 0, i32 0
  call void @putstr(i8* %i202)
  %i205 = load i32, i32* @a
  %i206 = icmp ne i32 %i205, 0
  br i1 %i206, label %main_b207, label %main_b204
main_b203:
  %i210 = getelementptr [17 x i8], [17 x i8]* @str.12, i32 0, i32 0
  call void @putstr(i8* %i210)
  br label %main_b204
main_b204:
  %i214 = load i32, i32* @c
  %i215 = icmp eq i32 %i214, 0
  br i1 %i215, label %main_b211, label %main_b213
main_b207:
  %i208 = load i32, i32* @b
  %i209 = icmp ne i32 %i208, 0
  br i1 %i209, label %main_b203, label %main_b204
main_b211:
  %i216 = getelementptr [11 x i8], [11 x i8]* @str.13, i32 0, i32 0
  call void @putstr(i8* %i216)
  br label %main_b212
main_b212:
  %i221 = load i32, i32* @a
  %i222 = icmp ne i32 %i221, 0
  br i1 %i222, label %main_b217, label %main_b220
main_b213:
  br label %main_b212
main_b217:
  %i225 = getelementptr [16 x i8], [16 x i8]* @str.14, i32 0, i32 0
  call void @putstr(i8* %i225)
  br label %main_b218
main_b218:
  %i226 = load i32, i32* @a
  %i227 = load i32, i32* @b
  %i228 = load i32, i32* @c
  %i229 = call i32 @sum(i32 %i226, i32 %i227, i32 %i228)
  %i230 = getelementptr [19 x i8], [19 x i8]* @str.15, i32 0, i32 0
  call void @putstr(i8* %i230)
  call void @putint(i32 %i229)
  call void @putch(i32 10)
  %i231 = getelementptr [5 x i32], [5 x i32]* @lis, i32 0, i32 0
  %i232 = load i32, i32* %i231
  %i233 = getelementptr [5 x i32], [5 x i32]* @lis, i32 0, i32 1
  %i234 = load i32, i32* %i233
  %i235 = getelementptr [5 x i32], [5 x i32]* @lis, i32 0, i32 2
  %i236 = load i32, i32* %i235
  %i237 = call i32 @sum(i32 %i232, i32 %i234, i32 %i236)
  %i238 = getelementptr [21 x i8], [21 x i8]* @str.16, i32 0, i32 0
  call void @putstr(i8* %i238)
  call void @putint(i32 %i237)
  call void @putch(i32 10)
  ret i32 0
main_b219:
  br label %main_b218
main_b220:
  %i223 = load i32, i32* @c
  %i224 = icmp ne i32 %i223, 0
  br i1 %i224, label %main_b217, label %main_b219
}
