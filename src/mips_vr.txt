.data
normalConst1:
	.word 10
normalConst2:
	.word 12
normalConst3:
	.word 13
array1DConst1:
	.word 1
	.word 2
	.word 3
array2DConst1:
	.word 1
	.word 3
	.word 3
	.word 5
	.word 5
	.word 7
normalVar1:
	.word 21
normalVar2:
	.word 22
normalVar3:
	.word 23
array1DVar1:
	.word 1
	.word 2
	.word 3
	.word 4
array2DVar1:
	.space	24
sum:
	.word 0
str.0:
	.asciiz " is even!\n"
str.1:
	.asciiz " is odd!\n"
str.2:
	.asciiz "All even!\n"
str.3:
	.asciiz "Contains odd! "
str.4:
	.asciiz "array contains "
str.5:
	.asciiz " even number!\n"
str.6:
	.asciiz "19373341\n"
str.7:
	.asciiz "m = "
str.8:
	.asciiz ", n = "
str.9:
	.asciiz ", mm = "
str.10:
	.asciiz ", nn = "
str.11:
	.asciiz "max of mm and nn: "
str.12:
	.asciiz "; min of mm and nn: "
str.13:
	.asciiz "mainConst1 = "
str.14:
	.asciiz "Sum of normalConst: "
str.15:
	.asciiz "Sum of array: "
str.16:
	.asciiz "sum of array: "


.text
main:
main_b154:
	addiu $sp, $sp, -4
	la vr0, str.6
	move $a0, vr0
	li $v0, 4
	syscall
	li $v0, 5
	syscall
	move vr1, $v0
	li $v0, 5
	syscall
	move vr2, $v0
	li $v0, 5
	syscall
	move vr3, $v0
	move $a0, vr2
	move $a1, vr3
	jal get2Max
	move vr4, $v0
	move $a0, vr2
	move $a1, vr3
	jal get2Min
	move vr5, $v0
	li vr6, 0
	j main_b172
main_b172:
	blt vr6, 4, main_b173
	j main_b174
main_b173:
	mul vr8, vr6, vr6
	li vr9, -2147483647
	mult vr9, vr8
	mfhi vr9
	addu vr9, vr9, vr8
	slt $v0, vr8, $zero
	addu vr9, vr9, $v0
	la vr10, array1DVar1
	sll vr11, vr6, 2
	addu vr11, vr10, vr11
	sw vr9, 0(vr11)
	addiu vr12, vr6, 1
	move vr6, vr12
	j main_b172
main_b174:
	la vr13, array1DVar1
	move $a0, vr13
	li $a1, 4
	jal getArraySum
	move vr14, $v0
	la vr15, str.7
	move $a0, vr15
	li $v0, 4
	syscall
	move $a0, vr14
	li $v0, 1
	syscall
	la vr16, str.8
	move $a0, vr16
	li $v0, 4
	syscall
	move $a0, vr1
	li $v0, 1
	syscall
	la vr17, str.9
	move $a0, vr17
	li $v0, 4
	syscall
	move $a0, vr2
	li $v0, 1
	syscall
	la vr18, str.10
	move $a0, vr18
	li $v0, 4
	syscall
	move $a0, vr3
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	la vr19, str.11
	move $a0, vr19
	li $v0, 4
	syscall
	move $a0, vr4
	li $v0, 1
	syscall
	la vr20, str.12
	move $a0, vr20
	li $v0, 4
	syscall
	move $a0, vr5
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	la vr21, str.13
	move $a0, vr21
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	lw vr22, normalConst1
	lw vr23, normalConst2
	addu vr24, vr22, vr23
	lw vr25, normalConst3
	addu vr26, vr24, vr25
	la vr27, str.14
	move $a0, vr27
	li $v0, 4
	syscall
	move $a0, vr26
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move $a0, vr1
	jal judgeEvenOdd
	la vr28, str.15
	move $a0, vr28
	li $v0, 4
	syscall
	move $a0, vr14
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li vr30, 0
	li vr29, 0
	j main_b212
main_b212:
	blt vr30, 2, main_b213
	j main_b214
main_b213:
	li vr34, 0
	j main_b217
main_b214:
	lw vr32, sum
	la vr33, str.16
	move $a0, vr33
	li $v0, 4
	syscall
	move $a0, vr32
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move vr49, vr29
	li vr50, 0
	j main_b241
main_b217:
	blt vr34, 3, main_b218
	j main_b219
main_b218:
	sll vr36, vr30, 3
	sll $v0, vr30, 1
	addu vr36, vr36, $v0
	subu vr37, vr36, vr34
	la vr38, array2DVar1
	sll vr39, vr30, 3
	sll $v0, vr30, 2
	addu vr39, vr39, $v0
	addu vr39, vr38, vr39
	sll vr40, vr34, 2
	addu vr40, vr39, vr40
	sw vr37, 0(vr40)
	lw vr41, sum
	la vr42, array2DVar1
	sll vr43, vr30, 3
	sll $v0, vr30, 2
	addu vr43, vr43, $v0
	addu vr43, vr42, vr43
	sll vr44, vr34, 2
	addu vr44, vr43, vr44
	lw vr45, 0(vr44)
	addu vr46, vr41, vr45
	sw vr46, sum
	addiu vr47, vr34, 1
	move vr34, vr47
	j main_b217
main_b219:
	addiu vr48, vr30, 1
	move vr29, vr34
	move vr30, vr48
	j main_b212
main_b241:
	blt vr50, 2, main_b242
	j main_b243
main_b242:
	li vr55, 0
	j main_b246
main_b243:
	la vr52, array1DVar1
	move $a0, vr52
	li $a1, 4
	jal cntEvenNum
	move vr53, $v0
	la vr54, array2DVar1
	move $a0, vr54
	li $a1, 2
	jal judgeArrayAllEven
	j main_b275
main_b246:
	blt vr55, 3, main_b247
	j main_b248
main_b247:
	sll vr57, vr50, 2
	mul vr58, vr57, vr55
	li vr59, -2147483647
	mult vr59, vr58
	mfhi vr59
	addu vr59, vr59, vr58
	slt $v0, vr58, $zero
	addu vr59, vr59, $v0
	addiu vr60, vr59, 4
	addiu vr61, vr60, -2
	la vr62, array2DVar1
	sll vr63, vr50, 3
	sll $v0, vr50, 2
	addu vr63, vr63, $v0
	addu vr63, vr62, vr63
	sll vr64, vr55, 2
	addu vr64, vr63, vr64
	sw vr61, 0(vr64)
	addiu vr65, vr55, 1
	move vr55, vr65
	j main_b246
main_b248:
	addiu vr66, vr50, 1
	move vr50, vr66
	move vr49, vr55
	j main_b241
main_b268:
	la vr67, array2DVar1
	lw vr68, 0(vr67)
	move $a0, vr68
	jal judgeEvenOdd
	j main_b269
main_b269:
	li $v0, 10
	syscall
main_b275:
	j main_b269

outputInt:
outputInt_b0:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr69, $a0
	move $a0, vr69
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

getArraySum:
getArraySum_b4:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr70, $a0
	move vr71, $a1
	li vr73, 0
	li vr72, 0
	j getArraySum_b11
getArraySum_b11:
	blt vr73, vr71, getArraySum_b12
	j getArraySum_b13
getArraySum_b12:
	sll vr75, vr73, 2
	addu vr75, vr70, vr75
	lw vr76, 0(vr75)
	addu vr77, vr72, vr76
	addiu vr78, vr73, 1
	move vr73, vr78
	move vr72, vr77
	j getArraySum_b11
getArraySum_b13:
	move $v0, vr72
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

judgeEvenOdd:
judgeEvenOdd_b26:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr79, $a0
	li vr80, -2147483647
	mult vr80, vr79
	mfhi vr80
	addu vr80, vr80, vr79
	slt $v0, vr79, $zero
	addu vr80, vr80, $v0
	sll vr80, vr80, 1
	subu vr80, vr79, vr80
	beq vr80, 0, judgeEvenOdd_b29
	j judgeEvenOdd_b31
judgeEvenOdd_b29:
	move $a0, vr79
	li $v0, 1
	syscall
	la vr82, str.0
	move $a0, vr82
	li $v0, 4
	syscall
	j judgeEvenOdd_b30
judgeEvenOdd_b30:
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
judgeEvenOdd_b31:
	move $a0, vr79
	li $v0, 1
	syscall
	la vr83, str.1
	move $a0, vr83
	li $v0, 4
	syscall
	j judgeEvenOdd_b30

judgeArrayAllEven:
judgeArrayAllEven_b39:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr84, $a0
	move vr85, $a1
	li vr87, 0
	li vr86, 0
	li vr88, 0
	li vr89, 0
	j judgeArrayAllEven_b48
judgeArrayAllEven_b48:
	blt vr89, vr85, judgeArrayAllEven_b49
	move vr91, vr86
	move vr92, vr87
	move vr93, vr88
	j judgeArrayAllEven_b273
judgeArrayAllEven_b49:
	li vr95, 0
	j judgeArrayAllEven_b54
judgeArrayAllEven_b50:
	beq vr92, 0, judgeArrayAllEven_b82
	j judgeArrayAllEven_b84
judgeArrayAllEven_b54:
	blt vr95, 3, judgeArrayAllEven_b55
	move vr102, vr86
	move vr103, vr87
	j judgeArrayAllEven_b274
judgeArrayAllEven_b55:
	sll vr97, vr89, 3
	sll $v0, vr89, 2
	addu vr97, vr97, $v0
	addu vr97, vr84, vr97
	sll vr98, vr95, 2
	addu vr98, vr97, vr98
	lw vr99, 0(vr98)
	li vr100, -2147483647
	mult vr100, vr99
	mfhi vr100
	addu vr100, vr100, vr99
	slt $v0, vr99, $zero
	addu vr100, vr100, $v0
	sll vr100, vr100, 1
	subu vr100, vr99, vr100
	beq vr100, 0, judgeArrayAllEven_b59
	j judgeArrayAllEven_b61
judgeArrayAllEven_b56:
	beq vr103, 1, judgeArrayAllEven_b76
	j judgeArrayAllEven_b77
judgeArrayAllEven_b59:
	addiu vr105, vr95, 1
	move vr95, vr105
	j judgeArrayAllEven_b54
judgeArrayAllEven_b61:
	sll vr106, vr89, 3
	sll $v0, vr89, 2
	addu vr106, vr106, $v0
	addu vr106, vr84, vr106
	sll vr107, vr95, 2
	addu vr107, vr106, vr107
	lw vr108, 0(vr107)
	move vr102, vr108
	li vr103, 1
	j judgeArrayAllEven_b56
judgeArrayAllEven_b76:
	move vr91, vr102
	move vr93, vr95
	move vr92, vr103
	j judgeArrayAllEven_b50
judgeArrayAllEven_b77:
	addiu vr109, vr89, 1
	move vr89, vr109
	move vr86, vr102
	move vr88, vr95
	move vr87, vr103
	j judgeArrayAllEven_b48
judgeArrayAllEven_b82:
	la vr110, str.2
	move $a0, vr110
	li $v0, 4
	syscall
	j judgeArrayAllEven_b83
judgeArrayAllEven_b83:
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
judgeArrayAllEven_b84:
	la vr111, str.3
	move $a0, vr111
	li $v0, 4
	syscall
	move $a0, vr91
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j judgeArrayAllEven_b83
judgeArrayAllEven_b273:
	j judgeArrayAllEven_b50
judgeArrayAllEven_b274:
	j judgeArrayAllEven_b56

cntEvenNum:
cntEvenNum_b90:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr112, $a0
	move vr113, $a1
	li vr114, 0
	li vr115, 0
	j cntEvenNum_b97
cntEvenNum_b97:
	addiu vr116, vr113, -1
	ble vr115, vr116, cntEvenNum_b98
	j cntEvenNum_b99
cntEvenNum_b98:
	sll vr118, vr115, 2
	addu vr118, vr112, vr118
	lw vr119, 0(vr118)
	li vr120, -2147483647
	mult vr120, vr119
	mfhi vr120
	addu vr120, vr120, vr119
	slt $v0, vr119, $zero
	addu vr120, vr120, $v0
	sll vr120, vr120, 1
	subu vr120, vr119, vr120
	bne vr120, 0, cntEvenNum_b104
	j cntEvenNum_b105
cntEvenNum_b99:
	la vr122, str.4
	move $a0, vr122
	li $v0, 4
	syscall
	move $a0, vr114
	li $v0, 1
	syscall
	la vr123, str.5
	move $a0, vr123
	li $v0, 4
	syscall
	move $v0, vr114
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
cntEvenNum_b104:
	addiu vr124, vr115, 1
	move vr114, vr114
	move vr115, vr124
	j cntEvenNum_b97
cntEvenNum_b105:
	addiu vr125, vr114, 1
	addiu vr126, vr115, 1
	move vr115, vr126
	move vr114, vr125
	j cntEvenNum_b97

get2Max:
get2Max_b122:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr127, $a0
	move vr128, $a1
	bgt vr127, vr128, get2Max_b129
	j get2Max_b131
get2Max_b129:
	move vr130, vr127
	j get2Max_b130
get2Max_b130:
	move $v0, vr130
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
get2Max_b131:
	move vr130, vr128
	j get2Max_b130

get2Min:
get2Min_b138:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr131, $a0
	move vr132, $a1
	bge vr131, vr132, get2Min_b145
	j get2Min_b147
get2Min_b145:
	move vr134, vr132
	j get2Min_b146
get2Min_b146:
	move $v0, vr134
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
get2Min_b147:
	move vr134, vr131
	j get2Min_b146

