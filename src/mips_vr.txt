.data
normalConst1:
	.word 10
normalConst2:
	.word 12
normalConst3:
	.word 13
array1DConst1:
	.word 1
	.word 2
	.word 3
array2DConst1:
	.word 1
	.word 3
	.word 3
	.word 5
	.word 5
	.word 7
normalVar1:
	.word 21
normalVar2:
	.word 22
normalVar3:
	.word 23
array1DVar1:
	.word 1
	.word 2
	.word 3
	.word 4
array2DVar1:
	.space	24
sum:
	.word 0
str.0:
	.asciiz " is even!\n"
str.1:
	.asciiz " is odd!\n"
str.2:
	.asciiz "All even!\n"
str.3:
	.asciiz "Contains odd! "
str.4:
	.asciiz "array contains "
str.5:
	.asciiz " even number!\n"
str.6:
	.asciiz "19373341\n"
str.7:
	.asciiz "m = "
str.8:
	.asciiz ", n = "
str.9:
	.asciiz ", mm = "
str.10:
	.asciiz ", nn = "
str.11:
	.asciiz "max of mm and nn: "
str.12:
	.asciiz "; min of mm and nn: "
str.13:
	.asciiz "mainConst1 = "
str.14:
	.asciiz "Sum of normalConst: "
str.15:
	.asciiz "Sum of array: "
str.16:
	.asciiz "sum of array: "


.text
main:
main_b152:
	addiu $sp, $sp, -4
	la vr0, str.6
	move $a0, vr0
	li $v0, 4
	syscall
	li $v0, 5
	syscall
	move vr1, $v0
	li $v0, 5
	syscall
	move vr2, $v0
	li $v0, 5
	syscall
	move vr3, $v0
	move $a0, vr2
	move $a1, vr3
	jal get2Max
	move vr4, $v0
	move $a0, vr2
	move $a1, vr3
	jal get2Min
	move vr5, $v0
	li vr6, 0
	j main_b170
main_b170:
	blt vr6, 4, main_b171
	j main_b172
main_b171:
	mul vr8, vr6, vr6
	li vr9, -2147483647
	mult vr9, vr8
	mfhi vr9
	addu vr9, vr9, vr8
	slt $v0, vr8, $zero
	addu vr9, vr9, $v0
	la vr10, array1DVar1
	sll vr11, vr6, 2
	addu vr11, vr10, vr11
	sw vr9, 0(vr11)
	addiu vr12, vr6, 1
	move vr6, vr12
	j main_b170
main_b172:
	la vr13, array1DVar1
	move $a0, vr13
	li $a1, 4
	jal getArraySum
	move vr14, $v0
	la vr15, str.7
	move $a0, vr15
	li $v0, 4
	syscall
	move $a0, vr14
	li $v0, 1
	syscall
	la vr16, str.8
	move $a0, vr16
	li $v0, 4
	syscall
	move $a0, vr1
	li $v0, 1
	syscall
	la vr17, str.9
	move $a0, vr17
	li $v0, 4
	syscall
	move $a0, vr2
	li $v0, 1
	syscall
	la vr18, str.10
	move $a0, vr18
	li $v0, 4
	syscall
	move $a0, vr3
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	la vr19, str.11
	move $a0, vr19
	li $v0, 4
	syscall
	move $a0, vr4
	li $v0, 1
	syscall
	la vr20, str.12
	move $a0, vr20
	li $v0, 4
	syscall
	move $a0, vr5
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	la vr21, str.13
	move $a0, vr21
	li $v0, 4
	syscall
	li $a0, 10
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	lw vr22, normalConst1
	lw vr23, normalConst2
	addu vr24, vr22, vr23
	lw vr25, normalConst3
	addu vr26, vr24, vr25
	la vr27, str.14
	move $a0, vr27
	li $v0, 4
	syscall
	move $a0, vr26
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move $a0, vr1
	jal judgeEvenOdd
	la vr28, str.15
	move $a0, vr28
	li $v0, 4
	syscall
	move $a0, vr14
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	li vr30, 0
	li vr29, 0
	j main_b210
main_b210:
	blt vr30, 2, main_b211
	j main_b212
main_b211:
	li vr34, 0
	j main_b215
main_b212:
	lw vr32, sum
	la vr33, str.16
	move $a0, vr33
	li $v0, 4
	syscall
	move $a0, vr32
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	move vr49, vr29
	li vr50, 0
	j main_b239
main_b215:
	blt vr34, 3, main_b216
	j main_b217
main_b216:
	sll vr36, vr30, 3
	sll $v0, vr30, 1
	addu vr36, vr36, $v0
	subu vr37, vr36, vr34
	la vr38, array2DVar1
	sll vr39, vr30, 3
	sll $v0, vr30, 2
	addu vr39, vr39, $v0
	addu vr39, vr38, vr39
	sll vr40, vr34, 2
	addu vr40, vr39, vr40
	sw vr37, 0(vr40)
	lw vr41, sum
	la vr42, array2DVar1
	sll vr43, vr30, 3
	sll $v0, vr30, 2
	addu vr43, vr43, $v0
	addu vr43, vr42, vr43
	sll vr44, vr34, 2
	addu vr44, vr43, vr44
	lw vr45, 0(vr44)
	addu vr46, vr41, vr45
	sw vr46, sum
	addiu vr47, vr34, 1
	move vr34, vr47
	j main_b215
main_b217:
	addiu vr48, vr30, 1
	move vr30, vr48
	move vr29, vr34
	j main_b210
main_b239:
	blt vr50, 2, main_b240
	j main_b241
main_b240:
	li vr55, 0
	j main_b244
main_b241:
	la vr52, array1DVar1
	move $a0, vr52
	li $a1, 4
	jal cntEvenNum
	move vr53, $v0
	la vr54, array2DVar1
	move $a0, vr54
	li $a1, 2
	jal judgeArrayAllEven
	j main_b273
main_b244:
	blt vr55, 3, main_b245
	j main_b246
main_b245:
	sll vr57, vr50, 2
	mul vr58, vr57, vr55
	li vr59, -2147483647
	mult vr59, vr58
	mfhi vr59
	addu vr59, vr59, vr58
	slt $v0, vr58, $zero
	addu vr59, vr59, $v0
	addiu vr60, vr59, 4
	addiu vr61, vr60, -2
	la vr62, array2DVar1
	sll vr63, vr50, 3
	sll $v0, vr50, 2
	addu vr63, vr63, $v0
	addu vr63, vr62, vr63
	sll vr64, vr55, 2
	addu vr64, vr63, vr64
	sw vr61, 0(vr64)
	addiu vr65, vr55, 1
	move vr55, vr65
	j main_b244
main_b246:
	addiu vr66, vr50, 1
	move vr50, vr66
	move vr49, vr55
	j main_b239
main_b266:
	la vr67, array2DVar1
	lw vr68, 0(vr67)
	move $a0, vr68
	jal judgeEvenOdd
	j main_b267
main_b267:
	li $v0, 10
	syscall
main_b273:
	j main_b267

outputInt:
outputInt_b0:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr69, $a0
	move $a0, vr69
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

getArraySum:
getArraySum_b4:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr70, $a0
	move vr71, $a1
	li vr73, 0
	li vr72, 0
	j getArraySum_b11
getArraySum_b11:
	blt vr73, vr71, getArraySum_b12
	j getArraySum_b13
getArraySum_b12:
	sll vr75, vr73, 2
	addu vr75, vr70, vr75
	lw vr76, 0(vr75)
	addu vr77, vr72, vr76
	addiu vr78, vr73, 1
	move vr73, vr78
	move vr72, vr77
	j getArraySum_b11
getArraySum_b13:
	move $v0, vr72
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

judgeEvenOdd:
judgeEvenOdd_b26:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr79, $a0
	li vr80, -2147483647
	mult vr80, vr79
	mfhi vr80
	addu vr80, vr80, vr79
	slt $v0, vr79, $zero
	addu vr80, vr80, $v0
	sll vr80, vr80, 1
	subu vr80, vr79, vr80
	beq vr80, 0, judgeEvenOdd_b29
	j judgeEvenOdd_b31
judgeEvenOdd_b29:
	move $a0, vr79
	li $v0, 1
	syscall
	la vr82, str.0
	move $a0, vr82
	li $v0, 4
	syscall
	j judgeEvenOdd_b30
judgeEvenOdd_b30:
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
judgeEvenOdd_b31:
	move $a0, vr79
	li $v0, 1
	syscall
	la vr83, str.1
	move $a0, vr83
	li $v0, 4
	syscall
	j judgeEvenOdd_b30

judgeArrayAllEven:
judgeArrayAllEven_b39:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr84, $a0
	move vr85, $a1
	lw vr86, 4(vr84)
	li vr87, 0
	li vr89, 0
	li vr88, 0
	j judgeArrayAllEven_b51
judgeArrayAllEven_b51:
	blt vr89, vr85, judgeArrayAllEven_b52
	move vr91, vr87
	move vr92, vr88
	j judgeArrayAllEven_b271
judgeArrayAllEven_b52:
	li vr94, 0
	j judgeArrayAllEven_b57
judgeArrayAllEven_b53:
	beq vr91, 0, judgeArrayAllEven_b80
	j judgeArrayAllEven_b82
judgeArrayAllEven_b57:
	blt vr94, 3, judgeArrayAllEven_b58
	move vr101, vr87
	j judgeArrayAllEven_b272
judgeArrayAllEven_b58:
	sll vr96, vr89, 3
	sll $v0, vr89, 2
	addu vr96, vr96, $v0
	addu vr96, vr84, vr96
	sll vr97, vr94, 2
	addu vr97, vr96, vr97
	lw vr98, 0(vr97)
	li vr99, -2147483647
	mult vr99, vr98
	mfhi vr99
	addu vr99, vr99, vr98
	slt $v0, vr98, $zero
	addu vr99, vr99, $v0
	sll vr99, vr99, 1
	subu vr99, vr98, vr99
	beq vr99, 0, judgeArrayAllEven_b62
	j judgeArrayAllEven_b64
judgeArrayAllEven_b59:
	beq vr101, 1, judgeArrayAllEven_b74
	j judgeArrayAllEven_b75
judgeArrayAllEven_b62:
	addiu vr103, vr94, 1
	move vr94, vr103
	j judgeArrayAllEven_b57
judgeArrayAllEven_b64:
	li vr101, 1
	j judgeArrayAllEven_b59
judgeArrayAllEven_b74:
	move vr91, vr101
	move vr92, vr94
	j judgeArrayAllEven_b53
judgeArrayAllEven_b75:
	addiu vr104, vr89, 1
	move vr89, vr104
	move vr87, vr101
	move vr88, vr94
	j judgeArrayAllEven_b51
judgeArrayAllEven_b80:
	la vr105, str.2
	move $a0, vr105
	li $v0, 4
	syscall
	j judgeArrayAllEven_b81
judgeArrayAllEven_b81:
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
judgeArrayAllEven_b82:
	la vr106, str.3
	move $a0, vr106
	li $v0, 4
	syscall
	move $a0, vr86
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	j judgeArrayAllEven_b81
judgeArrayAllEven_b271:
	j judgeArrayAllEven_b53
judgeArrayAllEven_b272:
	j judgeArrayAllEven_b59

cntEvenNum:
cntEvenNum_b88:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr107, $a0
	move vr108, $a1
	li vr110, 0
	li vr109, 0
	j cntEvenNum_b95
cntEvenNum_b95:
	addiu vr111, vr108, -1
	ble vr110, vr111, cntEvenNum_b96
	j cntEvenNum_b97
cntEvenNum_b96:
	sll vr113, vr110, 2
	addu vr113, vr107, vr113
	lw vr114, 0(vr113)
	li vr115, -2147483647
	mult vr115, vr114
	mfhi vr115
	addu vr115, vr115, vr114
	slt $v0, vr114, $zero
	addu vr115, vr115, $v0
	sll vr115, vr115, 1
	subu vr115, vr114, vr115
	bne vr115, 0, cntEvenNum_b102
	j cntEvenNum_b103
cntEvenNum_b97:
	la vr117, str.4
	move $a0, vr117
	li $v0, 4
	syscall
	move $a0, vr109
	li $v0, 1
	syscall
	la vr118, str.5
	move $a0, vr118
	li $v0, 4
	syscall
	move $v0, vr109
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
cntEvenNum_b102:
	addiu vr119, vr110, 1
	move vr109, vr109
	move vr110, vr119
	j cntEvenNum_b95
cntEvenNum_b103:
	addiu vr120, vr109, 1
	addiu vr121, vr110, 1
	move vr110, vr121
	move vr109, vr120
	j cntEvenNum_b95

get2Max:
get2Max_b120:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr122, $a0
	move vr123, $a1
	bgt vr122, vr123, get2Max_b127
	j get2Max_b129
get2Max_b127:
	move vr125, vr122
	j get2Max_b128
get2Max_b128:
	move $v0, vr125
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
get2Max_b129:
	move vr125, vr123
	j get2Max_b128

get2Min:
get2Min_b136:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr126, $a0
	move vr127, $a1
	bge vr126, vr127, get2Min_b143
	j get2Min_b145
get2Min_b143:
	move vr129, vr127
	j get2Min_b144
get2Min_b144:
	move $v0, vr129
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
get2Min_b145:
	move vr129, vr126
	j get2Min_b144

