.data
str.0:
	.asciiz "19"
str.1:
	.asciiz "384\n"
str.2:
	.asciiz "const and var // decl and def test\n"
str.3:
	.asciiz "expected result: 579, output: "
str.4:
	.asciiz "function (def and )call test\n"
str.5:
	.asciiz "expected result: {{589, 21}, {599, 31}}, output: {{"
str.6:
	.asciiz ", "
str.7:
	.asciiz "}, {"
str.8:
	.asciiz ", "
str.9:
	.asciiz "}}\n"
str.10:
	.asciiz "LExp test, falling into infinite loop indicates an error -- "
str.11:
	.asciiz "pass\n"
str.12:
	.asciiz "simple echo test, get a integer and read back: "
str.13:
	.asciiz "\n\n================================================================================\n                                     PASSED                                     \n================================================================================\n"


.text
main:
main_b109:
	addiu $sp, $sp, -84
	jal _
	la vr0, str.2
	move $a0, vr0
	li $v0, 4
	syscall
	li vr1, 5
	sw vr1, 28($sp)
	li vr2, 6
	sw vr2, 32($sp)
	li vr3, 7
	sw vr3, 36($sp)
	li vr4, 10
	sw vr4, 40($sp)
	li vr5, 27
	sw vr5, 44($sp)
	li vr6, 96
	sw vr6, 48($sp)
	li vr7, 1
	sw vr7, 52($sp)
	li vr8, 3
	sw vr8, 56($sp)
	li vr9, 2
	sw vr9, 60($sp)
	li vr10, 4
	sw vr10, 64($sp)
	li vr11, 2
	sw vr11, 68($sp)
	li vr12, 3
	sw vr12, 72($sp)
	li vr13, 1
	sw vr13, 76($sp)
	li vr14, 4
	sw vr14, 80($sp)
	lw vr15, 32($sp)
	sw vr15, 4($sp)
	lw vr16, 72($sp)
	lw vr17, 4($sp)
	lw vr18, 48($sp)
	mul vr19, vr17, vr18
	addu vr20, vr16, vr19
	la vr21, str.3
	move $a0, vr21
	li $v0, 4
	syscall
	move $a0, vr20
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	bne vr20, 579, main_b147
	j main_b148
main_b147:
	li $v0, 10
	syscall
main_b148:
	la vr23, str.4
	move $a0, vr23
	li $v0, 4
	syscall
	move $a0, vr20
	jal add2
	move vr24, $v0
	sw vr24, 4($sp)
	lw vr25, 56($sp)
	move $a0, vr25
	li $a1, 5
	jal addN
	move vr26, $v0
	sw vr26, 8($sp)
	addiu $a0, $sp, 4
	li $a1, 2
	li $a2, 3
	jal aAddN
	li vr27, 5
	sw vr27, 12($sp)
	li vr28, 10
	sw vr28, 16($sp)
	li vr29, 15
	sw vr29, 20($sp)
	li vr30, 20
	sw vr30, 24($sp)
	addiu $a0, $sp, 12
	addiu $a1, $sp, 4
	li $a2, 2
	jal addBoardcast
	lw vr31, 12($sp)
	lw vr32, 16($sp)
	lw vr33, 20($sp)
	lw vr34, 24($sp)
	la vr35, str.5
	move $a0, vr35
	li $v0, 4
	syscall
	move $a0, vr31
	li $v0, 1
	syscall
	la vr36, str.6
	move $a0, vr36
	li $v0, 4
	syscall
	move $a0, vr32
	li $v0, 1
	syscall
	la vr37, str.7
	move $a0, vr37
	li $v0, 4
	syscall
	move $a0, vr33
	li $v0, 1
	syscall
	la vr38, str.8
	move $a0, vr38
	li $v0, 4
	syscall
	move $a0, vr34
	li $v0, 1
	syscall
	la vr39, str.9
	move $a0, vr39
	li $v0, 4
	syscall
	lw vr40, 12($sp)
	bne vr40, 589, main_b179
	j main_b180
main_b179:
	li $v0, 10
	syscall
main_b180:
	lw vr42, 16($sp)
	bne vr42, 21, main_b184
	j main_b185
main_b184:
	li $v0, 10
	syscall
main_b185:
	lw vr44, 20($sp)
	bne vr44, 599, main_b189
	j main_b190
main_b189:
	li $v0, 10
	syscall
main_b190:
	lw vr46, 24($sp)
	bne vr46, 31, main_b194
	j main_b195
main_b194:
	li $v0, 10
	syscall
main_b195:
	la vr48, str.10
	move $a0, vr48
	li $v0, 4
	syscall
	j main_b202
main_b200:
	j main_b201
main_b201:
	j main_b221
main_b202:
	j main_b204
main_b204:
	j main_b206
main_b206:
	j main_b208
main_b208:
	j main_b210
main_b210:
	j main_b212
main_b212:
	j main_b240
main_b214:
	jal DoNotCall
	move vr49, $v0
	bne vr49, 0, main_b233
	j main_b241
main_b218:
	j main_b219
main_b219:
	la vr51, str.11
	move $a0, vr51
	li $v0, 4
	syscall
	la vr52, str.12
	move $a0, vr52
	li $v0, 4
	syscall
	li $v0, 5
	syscall
	move vr53, $v0
	move $a0, vr53
	li $v0, 1
	syscall
	li $a0, 10
	li $v0, 11
	syscall
	la vr54, str.13
	move $a0, vr54
	li $v0, 4
	syscall
	li $v0, 10
	syscall
main_b221:
	j main_b243
main_b223:
	jal DoNotCall
	move vr55, $v0
	bne vr55, 0, main_b218
	j main_b244
main_b233:
	j main_b200
main_b234:
	j main_b200
main_b235:
	j main_b200
main_b236:
	j main_b200
main_b237:
	j main_b200
main_b238:
	j main_b200
main_b239:
	j main_b200
main_b240:
	j main_b200
main_b241:
	j main_b201
main_b242:
	j main_b219
main_b243:
	j main_b219
main_b244:
	j main_b219

_:
__b0:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	la vr57, str.0
	move $a0, vr57
	li $v0, 4
	syscall
	li $a0, 373
	li $v0, 1
	syscall
	la vr58, str.1
	move $a0, vr58
	li $v0, 4
	syscall
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

DoNotCall:
DoNotCall_b8:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	j DoNotCall_b9
DoNotCall_b9:
	j DoNotCall_b10
DoNotCall_b10:
	j DoNotCall_b9
DoNotCall_b11:
	li $v0, -1
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

addN:
addN_b14:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr59, $a0
	move vr60, $a1
	move vr62, vr59
	li vr61, 0
	j addN_b20
addN_b20:
	move vr64, vr62
	j addN_b21
addN_b21:
	beq vr61, 0, addN_b24
	j addN_b26
addN_b22:
	move $v0, vr64
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
addN_b24:
	addiu vr65, vr61, 1
	move vr62, vr62
	move vr61, vr65
	j addN_b20
addN_b25:
	move vr61, vr68
	move vr62, vr66
	j addN_b20
addN_b26:
	addiu vr66, vr62, 1
	beq vr61, vr60, addN_b33
	j addN_b34
addN_b33:
	move vr64, vr66
	j addN_b22
addN_b34:
	addiu vr68, vr61, 1
	j addN_b25
addN_b232:
	j addN_b22

add2:
add2_b41:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr69, $a0
	move $a0, vr69
	li $a1, 2
	jal addN
	move vr70, $v0
	move $v0, vr70
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

aAddN:
aAddN_b46:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr71, $a0
	move vr72, $a1
	move vr73, $a2
	li vr74, 0
	j aAddN_b54
aAddN_b54:
	blt vr74, vr72, aAddN_b55
	j aAddN_b56
aAddN_b55:
	sll vr76, vr74, 2
	addu vr76, vr71, vr76
	lw vr77, 0(vr76)
	move $a0, vr77
	move $a1, vr73
	jal addN
	move vr78, $v0
	sll vr79, vr74, 2
	addu vr79, vr71, vr79
	sw vr78, 0(vr79)
	addiu vr80, vr74, 1
	move vr74, vr80
	j aAddN_b54
aAddN_b56:
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra

addBoardcast:
addBoardcast_b71:
	addiu $sp, $sp, -4
	sw $ra, 0($sp)
	move vr81, $a0
	move vr82, $a1
	move vr83, $a2
	li vr84, 0
	li vr85, 0
	j addBoardcast_b79
addBoardcast_b79:
	blt vr85, vr83, addBoardcast_b80
	j addBoardcast_b81
addBoardcast_b80:
	li vr87, 0
	j addBoardcast_b86
addBoardcast_b81:
	lw $ra, 0($sp)
	addiu $sp, $sp, 4
	jr $ra
addBoardcast_b86:
	blt vr87, 2, addBoardcast_b87
	j addBoardcast_b88
addBoardcast_b87:
	sll vr89, vr85, 3
	addu vr89, vr81, vr89
	sll vr90, vr87, 2
	addu vr90, vr89, vr90
	lw vr91, 0(vr90)
	sll vr92, vr87, 2
	addu vr92, vr82, vr92
	lw vr93, 0(vr92)
	addu vr94, vr91, vr93
	sll vr95, vr85, 3
	addu vr95, vr81, vr95
	sll vr96, vr87, 2
	addu vr96, vr95, vr96
	sw vr94, 0(vr96)
	addiu vr97, vr87, 1
	move vr87, vr97
	j addBoardcast_b86
addBoardcast_b88:
	addiu vr98, vr85, 1
	move vr84, vr87
	move vr85, vr98
	j addBoardcast_b79

