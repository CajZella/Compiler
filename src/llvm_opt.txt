declare i32 @getint()
declare void @putint(i32)
declare void @putstr(i8*)
declare void @putch(i32)
@str.0 = private unnamed_addr constant [13 x i8] c"in addNum a=\00"
@str.1 = private unnamed_addr constant [4 x i8] c",b=\00"
@str.2 = private unnamed_addr constant [13 x i8] c"in addNum c=\00"
@str.3 = private unnamed_addr constant [4 x i8] c",d=\00"
@str.4 = private unnamed_addr constant [13 x i8] c"in addNum e=\00"
@str.5 = private unnamed_addr constant [3 x i8] c"e=\00"
@str.6 = private unnamed_addr constant [13 x i8] c" become even\00"
@str.7 = private unnamed_addr constant [7 x i8] c"out i=\00"
@str.8 = private unnamed_addr constant [20 x i8] c"in addNum out flag=\00"
@str.9 = private unnamed_addr constant [14 x i8] c"in testMul x=\00"
@str.10 = private unnamed_addr constant [4 x i8] c" y=\00"
@str.11 = private unnamed_addr constant [19 x i8] c"in testMul get re=\00"
@str.12 = private unnamed_addr constant [6 x i8] c"z==0\0A\00"
@str.13 = private unnamed_addr constant [10 x i8] c"20373780\0A\00"
@str.14 = private unnamed_addr constant [3 x i8] c"c=\00"
define dso_local void @addNum() {
addNum_b0:
  %i3 = call i32 @getint()
  %i4 = call i32 @getint()
  %i7 = getelementptr [13 x i8], [13 x i8]* @str.0, i32 0, i32 0
  call void @putstr(i8* %i7)
  call void @putint(i32 %i3)
  %i8 = getelementptr [4 x i8], [4 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i8)
  call void @putint(i32 %i4)
  call void @putch(i32 10)
  %i12 = add i32 %i3, %i4
  %i13 = mul i32 %i12, 2
  %i16 = sub i32 0, %i4
  %i19 = getelementptr [13 x i8], [13 x i8]* @str.2, i32 0, i32 0
  call void @putstr(i8* %i19)
  call void @putint(i32 %i13)
  %i20 = getelementptr [4 x i8], [4 x i8]* @str.3, i32 0, i32 0
  call void @putstr(i8* %i20)
  call void @putint(i32 %i16)
  call void @putch(i32 10)
  %i24 = add i32 %i13, %i16
  %i26 = getelementptr [13 x i8], [13 x i8]* @str.4, i32 0, i32 0
  call void @putstr(i8* %i26)
  call void @putint(i32 %i24)
  call void @putch(i32 10)
  br label %addNum_b29
addNum_b29:
  %p2 = phi i32 [ 0, %addNum_b0 ], [ 2, %addNum_b40 ], [ %p2, %addNum_b35 ]
  %p1 = phi i32 [ 0, %addNum_b0 ], [ %p1, %addNum_b40 ], [ %i46, %addNum_b35 ]
  %p0 = phi i32 [ %i24, %addNum_b0 ], [ %p0, %addNum_b40 ], [ %i49, %addNum_b35 ]
  %i33 = icmp slt i32 %p1, 3
  br i1 %i33, label %addNum_b30, label %addNum_b31
addNum_b30:
  %i38 = srem i32 %p0, 3
  %i39 = icmp eq i32 %i38, 0
  br i1 %i39, label %addNum_b34, label %addNum_b36
addNum_b31:
  %p3 = phi i32 [ %p2, %addNum_b29 ], [ 1, %addNum_b34 ]
  %i51 = getelementptr [3 x i8], [3 x i8]* @str.5, i32 0, i32 0
  call void @putstr(i8* %i51)
  call void @putint(i32 %p0)
  %i52 = getelementptr [13 x i8], [13 x i8]* @str.6, i32 0, i32 0
  call void @putstr(i8* %i52)
  %i54 = getelementptr [7 x i8], [7 x i8]* @str.7, i32 0, i32 0
  call void @putstr(i8* %i54)
  call void @putint(i32 %p1)
  call void @putch(i32 10)
  %i56 = getelementptr [20 x i8], [20 x i8]* @str.8, i32 0, i32 0
  call void @putstr(i8* %i56)
  call void @putint(i32 %p3)
  call void @putch(i32 10)
  ret void
addNum_b34:
  br label %addNum_b31
addNum_b35:
  %i46 = add i32 %p1, 1
  %i49 = add i32 %p0, %i46
  br label %addNum_b29
addNum_b36:
  %i43 = srem i32 %p0, 3
  %i44 = icmp eq i32 %i43, 1
  br i1 %i44, label %addNum_b40, label %addNum_b41
addNum_b40:
  br label %addNum_b29
addNum_b41:
  br label %addNum_b35
}
define dso_local i32 @testMul(i32 %ar58, i32 %ar60) {
testMul_b57:
  %i65 = getelementptr [14 x i8], [14 x i8]* @str.9, i32 0, i32 0
  call void @putstr(i8* %i65)
  call void @putint(i32 %ar58)
  %i66 = getelementptr [4 x i8], [4 x i8]* @str.10, i32 0, i32 0
  call void @putstr(i8* %i66)
  call void @putint(i32 %ar60)
  call void @putch(i32 10)
  %i71 = icmp slt i32 %ar60, 15
  br i1 %i71, label %testMul_b67, label %testMul_b69
testMul_b67:
  %i74 = add i32 %ar58, %ar60
  br label %testMul_b68
testMul_b68:
  %p5 = phi i32 [ %p4, %testMul_b76 ], [ %i74, %testMul_b67 ]
  %i97 = getelementptr [19 x i8], [19 x i8]* @str.11, i32 0, i32 0
  call void @putstr(i8* %i97)
  call void @putint(i32 %p5)
  call void @putch(i32 10)
  ret i32 %p5
testMul_b69:
  %i79 = icmp sle i32 %ar60, 20
  br i1 %i79, label %testMul_b75, label %testMul_b77
testMul_b75:
  %i82 = srem i32 %ar58, %ar60
  br label %testMul_b76
testMul_b76:
  %p4 = phi i32 [ %i82, %testMul_b75 ], [ %p6, %testMul_b84 ]
  br label %testMul_b68
testMul_b77:
  %i87 = icmp sge i32 %ar60, 30
  br i1 %i87, label %testMul_b83, label %testMul_b85
testMul_b83:
  %i90 = mul i32 %ar58, %ar60
  br label %testMul_b84
testMul_b84:
  %p6 = phi i32 [ %i95, %testMul_b85 ], [ %i90, %testMul_b83 ]
  br label %testMul_b76
testMul_b85:
  %i94 = sdiv i32 %ar60, %ar58
  %i95 = sub i32 %ar58, %i94
  br label %testMul_b84
}
define dso_local void @single(i32 %ar100) {
single_b99:
  %i105 = icmp eq i32 %ar100, 0
  br i1 %i105, label %single_b102, label %single_b103
single_b102:
  %i106 = getelementptr [6 x i8], [6 x i8]* @str.12, i32 0, i32 0
  call void @putstr(i8* %i106)
  br label %single_b103
single_b103:
  ret void
}
define dso_local i32 @main() {
main_b107:
  %i108 = getelementptr [10 x i8], [10 x i8]* @str.13, i32 0, i32 0
  call void @putstr(i8* %i108)
  call void @addNum()
  %i111 = call i32 @getint()
  %i112 = call i32 @getint()
  %i116 = icmp sgt i32 %i111, 20
  br i1 %i116, label %main_b113, label %main_b114
main_b113:
  %i118 = sub i32 %i111, 20
  br label %main_b114
main_b114:
  %p7 = phi i32 [ %i111, %main_b107 ], [ %i118, %main_b113 ]
  %i122 = icmp eq i32 %p7, 20
  br i1 %i122, label %main_b119, label %main_b120
main_b119:
  br label %main_b120
main_b120:
  %i126 = call i32 @testMul(i32 %p7, i32 %i112)
  %i128 = getelementptr [3 x i8], [3 x i8]* @str.14, i32 0, i32 0
  call void @putstr(i8* %i128)
  call void @putint(i32 %i126)
  call void @putch(i32 10)
  call void @single(i32 0)
  ret i32 0
}
