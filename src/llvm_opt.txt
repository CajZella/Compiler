declare i32 @getint()
declare void @putint(i32)
declare void @putstr(i8*)
declare void @putch(i32)
@a = dso_local constant i32 9
@b = dso_local constant i32 9
@d = dso_local global i32 9
@str.0 = private unnamed_addr constant [8 x i8] c"appear\0A\00"
@str.1 = private unnamed_addr constant [5 x i8] c"not\0A\00"
@str.2 = private unnamed_addr constant [10 x i8] c"print123\0A\00"
@str.3 = private unnamed_addr constant [7 x i8] c"/****/\00"
@str.4 = private unnamed_addr constant [5 x i8] c"/**/\00"
@str.5 = private unnamed_addr constant [22 x i8] c"print return value :\0A\00"
@str.6 = private unnamed_addr constant [15 x i8] c"in : 5 ,out = \00"
define dso_local i32 @mycheck(i32 %ar1) {
mycheck_b0:
  %i6 = icmp eq i32 %ar1, 1
  br i1 %i6, label %mycheck_b3, label %mycheck_b4
mycheck_b3:
  ret i32 10
mycheck_b4:
  %i10 = icmp eq i32 %ar1, 2
  br i1 %i10, label %mycheck_b7, label %mycheck_b8
mycheck_b7:
  ret i32 20
mycheck_b8:
  %i15 = icmp eq i32 %ar1, 4
  br i1 %i15, label %mycheck_b11, label %mycheck_b13
mycheck_b11:
  ret i32 40
mycheck_b12:
  %i29 = icmp eq i32 %ar1, 3
  br i1 %i29, label %mycheck_b25, label %mycheck_b27
mycheck_b13:
  %i20 = icmp eq i32 %ar1, 5
  br i1 %i20, label %mycheck_b16, label %mycheck_b18
mycheck_b16:
  ret i32 50
mycheck_b17:
  br label %mycheck_b12
mycheck_b18:
  %i24 = icmp eq i32 %ar1, 6
  br i1 %i24, label %mycheck_b21, label %mycheck_b22
mycheck_b21:
  ret i32 60
mycheck_b22:
  br label %mycheck_b17
mycheck_b25:
  ret i32 30
mycheck_b27:
  ret i32 99
}
define dso_local void @testGetInt() {
testGetInt_b30:
  br label %testGetInt_b32
testGetInt_b32:
  %p0 = phi i32 [ 0, %testGetInt_b30 ], [ %i41, %testGetInt_b33 ]
  %i36 = icmp slt i32 %p0, 9
  br i1 %i36, label %testGetInt_b33, label %testGetInt_b34
testGetInt_b33:
  %i38 = call i32 @getint()
  call void @putint(i32 %i38)
  call void @putch(i32 10)
  %i41 = add i32 %p0, 1
  br label %testGetInt_b32
testGetInt_b34:
  ret void
}
define dso_local i32 @main() {
main_b42:
  call void @putint(i32 19231177)
  call void @putch(i32 10)
  call void @testGetInt()
  br label %main_b58
main_b58:
  %p1 = phi i32 [ 1, %main_b42 ], [ %i78, %main_b66 ]
  %i62 = icmp slt i32 %p1, 10
  br i1 %i62, label %main_b59, label %main_b60
main_b59:
  %i64 = call i32 @mycheck(i32 %p1)
  call void @putint(i32 %i64)
  call void @putch(i32 10)
  %i69 = call i32 @mycheck(i32 %p1)
  %i71 = call i32 @mycheck(i32 %p1)
  %i72 = sdiv i32 %i71, 20
  %i73 = call i32 @mycheck(i32 %i72)
  %i74 = icmp slt i32 %i69, %i73
  br i1 %i74, label %main_b65, label %main_b67
main_b60:
  %i82 = getelementptr [10 x i8], [10 x i8]* @str.2, i32 0, i32 0
  call void @putstr(i8* %i82)
  call void @putint(i32 1)
  call void @putint(i32 2)
  call void @putint(i32 3)
  call void @putch(i32 10)
  %i85 = getelementptr [7 x i8], [7 x i8]* @str.3, i32 0, i32 0
  call void @putstr(i8* %i85)
  call void @putint(i32 1)
  call void @putint(i32 2)
  call void @putint(i32 3)
  call void @putch(i32 10)
  %i89 = getelementptr [5 x i8], [5 x i8]* @str.4, i32 0, i32 0
  call void @putstr(i8* %i89)
  call void @putint(i32 1)
  call void @putint(i32 2)
  call void @putint(i32 3)
  call void @putch(i32 10)
  %i90 = getelementptr [22 x i8], [22 x i8]* @str.5, i32 0, i32 0
  call void @putstr(i8* %i90)
  %i92 = call i32 @mycheck(i32 5)
  %i93 = getelementptr [15 x i8], [15 x i8]* @str.6, i32 0, i32 0
  call void @putstr(i8* %i93)
  call void @putint(i32 %i92)
  call void @putch(i32 10)
  %i95 = call i32 @mycheck(i32 5)
  %i96 = getelementptr [15 x i8], [15 x i8]* @str.6, i32 0, i32 0
  call void @putstr(i8* %i96)
  call void @putint(i32 %i95)
  call void @putch(i32 10)
  ret i32 0
main_b65:
  %i75 = getelementptr [8 x i8], [8 x i8]* @str.0, i32 0, i32 0
  call void @putstr(i8* %i75)
  br label %main_b66
main_b66:
  %i78 = add i32 %p1, 1
  br label %main_b58
main_b67:
  %i76 = getelementptr [5 x i8], [5 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i76)
  br label %main_b66
}
