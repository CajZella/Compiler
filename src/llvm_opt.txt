declare i32 @getint()
declare void @putint(i32)
declare void @putstr(i8*)
declare void @putch(i32)
@c_01 = dso_local constant i32 1
@c_02 = dso_local constant i32 2
@c_03 = dso_local constant i32 3
@c_04 = dso_local constant i32 4
@c_05 = dso_local constant i32 11
@c_06 = dso_local constant [3 x i32] [i32 1, i32 2, i32 3]
@c_07 = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4]]
@v_01 = dso_local global i32 1
@v_02 = dso_local global i32 0
@v_03 = dso_local global i32 3
@v_04 = dso_local global i32 0
@v_05 = dso_local global i32 2
@v_06 = dso_local global [3 x i32] [i32 1, i32 2, i32 3]
@v_07 = dso_local global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4]]
@str.0 = private unnamed_addr constant [13 x i8] c"Hello World\0A\00"
@str.1 = private unnamed_addr constant [11 x i8] c"v_UE_01 = \00"
@str.2 = private unnamed_addr constant [11 x i8] c"v_UE_02 = \00"
@str.3 = private unnamed_addr constant [13 x i8] c"v_UE_03_1 = \00"
@str.4 = private unnamed_addr constant [13 x i8] c"v_UE_03_2 = \00"
@str.5 = private unnamed_addr constant [10 x i8] c"20377020\0A\00"
@str.6 = private unnamed_addr constant [9 x i8] c"vm_01 = \00"
@str.7 = private unnamed_addr constant [9 x i8] c"vm_02 = \00"
@str.8 = private unnamed_addr constant [12 x i8] c",  vm_03 = \00"
@str.9 = private unnamed_addr constant [9 x i8] c"vm_04 = \00"
@str.10 = private unnamed_addr constant [9 x i8] c"vm_AE = \00"
@str.11 = private unnamed_addr constant [9 x i8] c"vm_ME = \00"
@str.12 = private unnamed_addr constant [9 x i8] c"vm_UE = \00"
@str.13 = private unnamed_addr constant [9 x i8] c"vm_PE = \00"
@str.14 = private unnamed_addr constant [10 x i8] c"vm_i_1 = \00"
@str.15 = private unnamed_addr constant [13 x i8] c",  vm_i_2 = \00"
@str.16 = private unnamed_addr constant [11 x i8] c"vs_test = \00"
define dso_local void @func_01() {
func_01_b0:
  %i1 = getelementptr [13 x i8], [13 x i8]* @str.0, i32 0, i32 0
  call void @putstr(i8* %i1)
  ret void
}
define dso_local i32 @func_02() {
func_02_b2:
  %i3 = load i32, i32* @v_01
  %i4 = add i32 %i3, 1
  store i32 %i4, i32* @v_01
  %i10 = add i32 3, 1
  %i13 = add i32 %i10, 3
  %i16 = add i32 %i13, 2
  %i19 = add i32 %i16, 1
  %i21 = mul i32 11, 22
  %i22 = sdiv i32 %i21, 33
  %i23 = srem i32 %i22, 44
  %i24 = add i32 %i19, %i23
  %i25 = srem i32 11, 22
  %i26 = sdiv i32 %i25, 33
  %i27 = mul i32 %i26, 44
  %i28 = add i32 %i24, %i27
  %i29 = sub i32 0, 1
  %i30 = sub i32 0, %i29
  %i31 = sub i32 0, %i30
  %i32 = add i32 11, %i31
  %i33 = sub i32 0, 2
  %i34 = sub i32 0, %i33
  %i35 = sub i32 %i32, %i34
  %i36 = sub i32 %i28, %i35
  ret i32 %i36
}
define dso_local i32 @func_03(i32 %ar38) {
func_03_b37:
  %i43 = mul i32 %ar38, 1
  %i44 = load i32, i32* @v_05
  %i45 = mul i32 %i43, %i44
  %i46 = sdiv i32 %i45, 123
  ret i32 %i46
}
define dso_local i32 @func_04(i32 %ar48, i32 %ar50) {
func_04_b47:
  %i56 = mul i32 %ar48, 1
  %i59 = sdiv i32 %ar50, 2
  %i60 = add i32 %i56, %i59
  %i61 = call i32 @func_02()
  %i62 = add i32 %i60, %i61
  %i64 = call i32 @func_03(i32 %ar50)
  %i65 = sub i32 %i62, %i64
  ret i32 %i65
}
define dso_local i32 @func_05(i32* %ar67) {
func_05_b66:
  %i70 = getelementptr i32, i32* %ar67, i32 0
  %i71 = load i32, i32* %i70
  %i72 = mul i32 %i71, 100
  ret i32 %i72
}
define dso_local i32 @func_06([3 x i32]* %ar74) {
func_06_b73:
  %i77 = getelementptr [3 x i32], [3 x i32]* %ar74, i32 0, i32 0
  %i78 = load i32, i32* %i77
  %i80 = getelementptr [3 x i32], [3 x i32]* %ar74, i32 1, i32 1
  %i81 = load i32, i32* %i80
  %i82 = add i32 %i78, %i81
  %i84 = getelementptr [3 x i32], [3 x i32]* %ar74, i32 2, i32 2
  %i85 = load i32, i32* %i84
  %i86 = add i32 %i82, %i85
  ret i32 %i86
}
define dso_local i32 @func_07(i32 %ar88, i32* %ar90, [3 x i32]* %ar92) {
func_07_b87:
  %i96 = getelementptr i32, i32* %ar90, i32 0
  %i97 = load i32, i32* %i96
  %i98 = add i32 %ar88, %i97
  %i100 = getelementptr [3 x i32], [3 x i32]* %ar92, i32 0, i32 0
  %i101 = load i32, i32* %i100
  %i102 = add i32 %i98, %i101
  ret i32 %i102
}
define dso_local i32 @test_if_and_while_01() {
test_if_and_while_01_b103:
  %i105 = sub i32 0, 10
  %i114 = icmp eq i32 %i105, 0
  %i115 = zext i1 %i114 to i32
  %i116 = icmp sge i32 %i115, 0
  br i1 %i116, label %test_if_and_while_01_b111, label %test_if_and_while_01_b112
test_if_and_while_01_b111:
  %i117 = sub i32 0, 1
  br label %test_if_and_while_01_b112
test_if_and_while_01_b112:
  %p4 = phi i32 [ 0, %test_if_and_while_01_b103 ], [ %i117, %test_if_and_while_01_b111 ]
  %p0 = phi i32 [ 1, %test_if_and_while_01_b103 ], [ 2, %test_if_and_while_01_b111 ]
  %i122 = icmp slt i32 0, 0
  br i1 %i122, label %test_if_and_while_01_b118, label %test_if_and_while_01_b120
test_if_and_while_01_b118:
  %i123 = load i32, i32* @v_01
  %i128 = icmp eq i32 %p0, 1
  br i1 %i128, label %test_if_and_while_01_b124, label %test_if_and_while_01_b126
test_if_and_while_01_b119:
  %p3 = phi i32 [ %p2, %test_if_and_while_01_b125 ], [ %i134, %test_if_and_while_01_b120 ]
  br label %test_if_and_while_01_b135
test_if_and_while_01_b120:
  %i131 = load i32, i32* @v_01
  %i132 = load i32, i32* @v_05
  %i133 = call i32 @func_04(i32 %i131, i32 %i132)
  %i134 = sub i32 0, %i133
  br label %test_if_and_while_01_b119
test_if_and_while_01_b124:
  %i129 = call i32 @func_02()
  br label %test_if_and_while_01_b125
test_if_and_while_01_b125:
  %p2 = phi i32 [ %i129, %test_if_and_while_01_b124 ], [ %i130, %test_if_and_while_01_b126 ]
  br label %test_if_and_while_01_b119
test_if_and_while_01_b126:
  %i130 = mul i32 123, 456
  br label %test_if_and_while_01_b125
test_if_and_while_01_b135:
  %p1 = phi i32 [ %p3, %test_if_and_while_01_b119 ], [ %i141, %test_if_and_while_01_b136 ]
  %i139 = icmp sgt i32 %p1, 0
  br i1 %i139, label %test_if_and_while_01_b136, label %test_if_and_while_01_b137
test_if_and_while_01_b136:
  %i141 = sub i32 %p1, 1
  br label %test_if_and_while_01_b135
test_if_and_while_01_b137:
  br label %test_if_and_while_01_b142
test_if_and_while_01_b142:
  %p5 = phi i32 [ 0, %test_if_and_while_01_b137 ], [ %i148, %test_if_and_while_01_b149 ], [ %i148, %test_if_and_while_01_b154 ]
  %i146 = icmp slt i32 %i105, 0
  br i1 %i146, label %test_if_and_while_01_b143, label %test_if_and_while_01_b144
test_if_and_while_01_b143:
  %i148 = add i32 %p5, 1
  %i152 = icmp sle i32 %i148, 10
  br i1 %i152, label %test_if_and_while_01_b149, label %test_if_and_while_01_b150
test_if_and_while_01_b144:
  %p8 = phi i32 [ %p5, %test_if_and_while_01_b142 ], [ %i148, %test_if_and_while_01_b153 ]
  %i161 = icmp sgt i32 100, 40
  br i1 %i161, label %test_if_and_while_01_b157, label %test_if_and_while_01_b159
test_if_and_while_01_b149:
  br label %test_if_and_while_01_b142
test_if_and_while_01_b150:
  %i156 = icmp eq i32 %i148, 12
  br i1 %i156, label %test_if_and_while_01_b153, label %test_if_and_while_01_b154
test_if_and_while_01_b153:
  br label %test_if_and_while_01_b144
test_if_and_while_01_b154:
  br label %test_if_and_while_01_b142
test_if_and_while_01_b157:
  %i166 = icmp sgt i32 100, 50
  br i1 %i166, label %test_if_and_while_01_b162, label %test_if_and_while_01_b164
test_if_and_while_01_b158:
  %p7 = phi i32 [ %i180, %test_if_and_while_01_b159 ], [ %p10, %test_if_and_while_01_b163 ]
  ret i32 %p7
test_if_and_while_01_b159:
  %i180 = sub i32 0, 4
  br label %test_if_and_while_01_b158
test_if_and_while_01_b162:
  %i171 = icmp sgt i32 100, 60
  br i1 %i171, label %test_if_and_while_01_b167, label %test_if_and_while_01_b169
test_if_and_while_01_b163:
  %p10 = phi i32 [ %i179, %test_if_and_while_01_b164 ], [ %p9, %test_if_and_while_01_b168 ]
  br label %test_if_and_while_01_b158
test_if_and_while_01_b164:
  %i179 = sub i32 0, 3
  br label %test_if_and_while_01_b163
test_if_and_while_01_b167:
  %i176 = icmp sgt i32 100, 70
  br i1 %i176, label %test_if_and_while_01_b172, label %test_if_and_while_01_b174
test_if_and_while_01_b168:
  %p9 = phi i32 [ %p6, %test_if_and_while_01_b173 ], [ %i178, %test_if_and_while_01_b169 ]
  br label %test_if_and_while_01_b163
test_if_and_while_01_b169:
  %i178 = sub i32 0, 2
  br label %test_if_and_while_01_b168
test_if_and_while_01_b172:
  br label %test_if_and_while_01_b173
test_if_and_while_01_b173:
  %p6 = phi i32 [ 0, %test_if_and_while_01_b172 ], [ %i177, %test_if_and_while_01_b174 ]
  br label %test_if_and_while_01_b168
test_if_and_while_01_b174:
  %i177 = sub i32 0, 1
  br label %test_if_and_while_01_b173
}
define dso_local i32 @test_if_and_while_02() {
test_if_and_while_02_b182:
  %i186 = load i32, i32* @v_01
  %i187 = icmp ne i32 %i186, 0
  br i1 %i187, label %test_if_and_while_02_b184, label %test_if_and_while_02_b185
test_if_and_while_02_b184:
  %i189 = add i32 0, 1
  br label %test_if_and_while_02_b185
test_if_and_while_02_b185:
  %p20 = phi i32 [ 0, %test_if_and_while_02_b182 ], [ %i189, %test_if_and_while_02_b184 ]
  %i192 = load i32, i32* @v_01
  %i193 = icmp slt i32 123, %i192
  br i1 %i193, label %test_if_and_while_02_b190, label %test_if_and_while_02_b191
test_if_and_while_02_b190:
  %i195 = add i32 %p20, 1
  br label %test_if_and_while_02_b191
test_if_and_while_02_b191:
  %p21 = phi i32 [ %p20, %test_if_and_while_02_b185 ], [ %i195, %test_if_and_while_02_b190 ]
  %i198 = load i32, i32* @c_01
  %i199 = load i32, i32* @v_01
  %i200 = mul i32 114514, %i199
  %i201 = load i32, i32* @c_01
  %i202 = load i32, i32* @v_01
  %i203 = call i32 @func_03(i32 %i202)
  %i204 = add i32 %i203, 6
  %i205 = sdiv i32 %i201, %i204
  %i206 = add i32 %i200, %i205
  %i207 = icmp sgt i32 %i198, %i206
  br i1 %i207, label %test_if_and_while_02_b196, label %test_if_and_while_02_b197
test_if_and_while_02_b196:
  %i209 = add i32 %p21, 1
  br label %test_if_and_while_02_b197
test_if_and_while_02_b197:
  %p12 = phi i32 [ %p21, %test_if_and_while_02_b191 ], [ %i209, %test_if_and_while_02_b196 ]
  %i212 = load i32, i32* @v_01
  %i213 = call i32 @func_03(i32 %i212)
  %i214 = load i32, i32* @v_01
  %i215 = load i32, i32* @v_05
  %i216 = call i32 @func_04(i32 %i214, i32 %i215)
  %i217 = icmp sle i32 %i213, %i216
  br i1 %i217, label %test_if_and_while_02_b210, label %test_if_and_while_02_b211
test_if_and_while_02_b210:
  %i219 = add i32 %p12, 1
  br label %test_if_and_while_02_b211
test_if_and_while_02_b211:
  %p13 = phi i32 [ %p12, %test_if_and_while_02_b197 ], [ %i219, %test_if_and_while_02_b210 ]
  %i222 = sub i32 0, 123
  %i223 = sub i32 0, %i222
  %i224 = load i32, i32* @v_05
  %i225 = call i32 @func_03(i32 %i224)
  %i226 = sub i32 0, %i225
  %i227 = sub i32 0, %i226
  %i228 = icmp sge i32 %i223, %i227
  br i1 %i228, label %test_if_and_while_02_b220, label %test_if_and_while_02_b221
test_if_and_while_02_b220:
  %i230 = add i32 %p13, 1
  br label %test_if_and_while_02_b221
test_if_and_while_02_b221:
  %p18 = phi i32 [ %p13, %test_if_and_while_02_b211 ], [ %i230, %test_if_and_while_02_b220 ]
  %i233 = load i32, i32* @v_01
  %i234 = icmp slt i32 123, %i233
  %i235 = load i32, i32* @v_01
  %i236 = call i32 @func_03(i32 %i235)
  %i237 = load i32, i32* @v_01
  %i238 = load i32, i32* @v_05
  %i239 = call i32 @func_04(i32 %i237, i32 %i238)
  %i240 = icmp sle i32 %i236, %i239
  %i241 = zext i1 %i234 to i32
  %i242 = zext i1 %i240 to i32
  %i243 = icmp eq i32 %i241, %i242
  br i1 %i243, label %test_if_and_while_02_b231, label %test_if_and_while_02_b232
test_if_and_while_02_b231:
  %i245 = add i32 %p18, 1
  br label %test_if_and_while_02_b232
test_if_and_while_02_b232:
  %p17 = phi i32 [ %p18, %test_if_and_while_02_b221 ], [ %i245, %test_if_and_while_02_b231 ]
  %i248 = load i32, i32* @v_01
  %i249 = icmp slt i32 123, %i248
  %i250 = load i32, i32* @v_01
  %i251 = call i32 @func_03(i32 %i250)
  %i252 = load i32, i32* @v_01
  %i253 = load i32, i32* @v_05
  %i254 = call i32 @func_04(i32 %i252, i32 %i253)
  %i255 = icmp sge i32 %i251, %i254
  %i256 = zext i1 %i249 to i32
  %i257 = zext i1 %i255 to i32
  %i258 = icmp ne i32 %i256, %i257
  br i1 %i258, label %test_if_and_while_02_b246, label %test_if_and_while_02_b247
test_if_and_while_02_b246:
  %i260 = add i32 %p17, 1
  br label %test_if_and_while_02_b247
test_if_and_while_02_b247:
  %p19 = phi i32 [ %p17, %test_if_and_while_02_b232 ], [ %i260, %test_if_and_while_02_b246 ]
  %i266 = icmp eq i32 1, 1
  br i1 %i266, label %test_if_and_while_02_b267, label %test_if_and_while_02_b264
test_if_and_while_02_b263:
  %i274 = add i32 %p19, 1
  br label %test_if_and_while_02_b264
test_if_and_while_02_b264:
  %p16 = phi i32 [ %p19, %test_if_and_while_02_b247 ], [ %p19, %test_if_and_while_02_b267 ], [ %p19, %test_if_and_while_02_b270 ], [ %i274, %test_if_and_while_02_b263 ]
  %i279 = icmp ne i32 2, 2
  br i1 %i279, label %test_if_and_while_02_b275, label %test_if_and_while_02_b277
test_if_and_while_02_b267:
  %i268 = call i32 @func_02()
  %i269 = icmp ne i32 %i268, 0
  br i1 %i269, label %test_if_and_while_02_b270, label %test_if_and_while_02_b264
test_if_and_while_02_b270:
  %i272 = icmp eq i32 1, 2
  br i1 %i272, label %test_if_and_while_02_b263, label %test_if_and_while_02_b264
test_if_and_while_02_b275:
  %i283 = add i32 %p16, 1
  br label %test_if_and_while_02_b276
test_if_and_while_02_b276:
  %p15 = phi i32 [ %i283, %test_if_and_while_02_b275 ], [ %p16, %test_if_and_while_02_b277 ]
  %i288 = icmp eq i32 1, 2
  br i1 %i288, label %test_if_and_while_02_b284, label %test_if_and_while_02_b286
test_if_and_while_02_b277:
  %i280 = call i32 @func_02()
  %i281 = icmp ne i32 %i280, 0
  br i1 %i281, label %test_if_and_while_02_b275, label %test_if_and_while_02_b276
test_if_and_while_02_b284:
  %i298 = add i32 %p15, 1
  br label %test_if_and_while_02_b285
test_if_and_while_02_b285:
  %p11 = phi i32 [ %i298, %test_if_and_while_02_b284 ], [ %p15, %test_if_and_while_02_b292 ]
  %i303 = icmp eq i32 1, 2
  br i1 %i303, label %test_if_and_while_02_b299, label %test_if_and_while_02_b301
test_if_and_while_02_b286:
  %i291 = icmp eq i32 1, 3
  br i1 %i291, label %test_if_and_while_02_b284, label %test_if_and_while_02_b289
test_if_and_while_02_b289:
  %i294 = icmp eq i32 1, 4
  br i1 %i294, label %test_if_and_while_02_b284, label %test_if_and_while_02_b292
test_if_and_while_02_b292:
  %i296 = icmp eq i32 1, 5
  br i1 %i296, label %test_if_and_while_02_b284, label %test_if_and_while_02_b285
test_if_and_while_02_b299:
  %i310 = add i32 %p11, 1
  br label %test_if_and_while_02_b300
test_if_and_while_02_b300:
  %p14 = phi i32 [ %i310, %test_if_and_while_02_b299 ], [ %p11, %test_if_and_while_02_b301 ], [ %p11, %test_if_and_while_02_b306 ]
  ret i32 %p14
test_if_and_while_02_b301:
  %i305 = icmp eq i32 1, 1
  br i1 %i305, label %test_if_and_while_02_b306, label %test_if_and_while_02_b300
test_if_and_while_02_b306:
  %i308 = icmp eq i32 2, 2
  br i1 %i308, label %test_if_and_while_02_b299, label %test_if_and_while_02_b300
}
define dso_local i32 @main() {
main_b312:
  %i313 = add i32 1, 1
  %i319 = load i32, i32* @v_01
  %i323 = mul i32 11, 22
  %i324 = sdiv i32 %i323, 33
  %i325 = srem i32 %i324, 44
  %i326 = add i32 %i325, 55
  %i327 = sub i32 %i326, 66
  %i328 = sub i32 0, 77
  %i329 = add i32 %i327, %i328
  %i330 = sub i32 %i329, 88
  %i331 = call i32 @func_02()
  %i332 = add i32 %i330, %i331
  %i336 = load i32, i32* @v_01
  %i337 = call i32 @func_03(i32 %i336)
  %i339 = sub i32 0, 114514
  %i340 = sub i32 0, %i339
  %i341 = sub i32 0, %i340
  %i343 = load i32, i32* @v_01
  %i344 = load i32, i32* @v_03
  %i345 = call i32 @func_04(i32 %i343, i32 %i344)
  %i346 = sub i32 0, %i345
  %i347 = sub i32 0, %i346
  %i348 = sub i32 0, %i347
  %i352 = load i32, i32* @v_01
  %i353 = mul i32 10, %i352
  %i355 = load i32, i32* @v_01
  %i356 = call i32 @func_03(i32 %i355)
  %i358 = sdiv i32 %i356, 2
  %i360 = sub i32 0, 1
  %i361 = sub i32 0, %i360
  %i362 = sub i32 0, %i361
  %i363 = load i32, i32* @v_01
  %i364 = load i32, i32* @v_05
  %i365 = call i32 @func_04(i32 %i363, i32 %i364)
  %i366 = sub i32 0, %i365
  %i367 = sub i32 0, %i366
  %i368 = sub i32 0, %i367
  %i369 = srem i32 %i362, %i368
  %i373 = load i32, i32* @v_01
  %i374 = mul i32 114514, %i373
  %i376 = load i32, i32* @v_01
  %i377 = call i32 @func_03(i32 %i376)
  %i378 = add i32 %i377, 6
  %i379 = sdiv i32 2, %i378
  %i380 = add i32 %i374, %i379
  %i382 = sub i32 0, 1
  %i383 = sub i32 0, %i382
  %i384 = sub i32 0, %i383
  %i385 = load i32, i32* @v_01
  %i386 = load i32, i32* @v_05
  %i387 = call i32 @func_04(i32 %i385, i32 %i386)
  %i388 = sub i32 0, %i387
  %i389 = sub i32 0, %i388
  %i390 = sub i32 0, %i389
  %i391 = srem i32 %i384, %i390
  %i392 = sub i32 %i391, 123
  %i393 = alloca [2 x i32]
  %i394 = getelementptr [2 x i32], [2 x i32]* %i393, i32 0, i32 0
  store i32 1, i32* %i394
  %i395 = getelementptr [2 x i32], [2 x i32]* %i393, i32 0, i32 1
  store i32 1, i32* %i395
  %i396 = alloca [3 x i32]
  %i397 = getelementptr [3 x i32], [3 x i32]* %i396, i32 0, i32 0
  store i32 1, i32* %i397
  %i398 = getelementptr [3 x i32], [3 x i32]* %i396, i32 0, i32 1
  store i32 2, i32* %i398
  %i399 = getelementptr [3 x i32], [3 x i32]* %i396, i32 0, i32 2
  store i32 3, i32* %i399
  %i400 = alloca [3 x [3 x i32]]
  %i401 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 0, i32 0
  store i32 11, i32* %i401
  %i402 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 0, i32 1
  store i32 12, i32* %i402
  %i403 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 0, i32 2
  store i32 13, i32* %i403
  %i404 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 1, i32 0
  store i32 21, i32* %i404
  %i405 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 1, i32 1
  store i32 22, i32* %i405
  %i406 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 1, i32 2
  store i32 23, i32* %i406
  %i407 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 2, i32 0
  store i32 31, i32* %i407
  %i408 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 2, i32 1
  store i32 32, i32* %i408
  %i409 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 2, i32 2
  store i32 33, i32* %i409
  %i410 = alloca [3 x i32]
  %i411 = alloca [3 x [3 x i32]]
  %i413 = getelementptr [2 x i32], [2 x i32]* %i393, i32 0, i32 0
  %i414 = load i32, i32* %i413
  %i416 = getelementptr [3 x i32], [3 x i32]* %i396, i32 0, i32 1
  %i417 = load i32, i32* %i416
  %i419 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 1, i32 2
  %i420 = load i32, i32* %i419
  %i421 = getelementptr [3 x i32], [3 x i32]* %i396, i32 0, i32 0
  store i32 10, i32* %i421
  %i422 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 1, i32 2
  store i32 10, i32* %i422
  %i426 = add i32 %i414, %i417
  %i428 = add i32 %i426, %i420
  %i429 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 0, i32 0
  %i430 = call i32 @func_05(i32* %i429)
  %i431 = add i32 %i428, %i430
  %i432 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 0
  %i433 = call i32 @func_06([3 x i32]* %i432)
  %i434 = add i32 %i431, %i433
  %i435 = load i32, i32* @v_01
  %i436 = getelementptr [3 x i32], [3 x i32]* %i396, i32 0, i32 0
  %i437 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %i400, i32 0, i32 0
  %i438 = call i32 @func_07(i32 %i435, i32* %i436, [3 x i32]* %i437)
  %i439 = add i32 %i434, %i438
  %i443 = call i32 @getint()
  %i445 = call i32 @test_if_and_while_01()
  %i447 = call i32 @test_if_and_while_02()
  %i449 = call i32 @func_02()
  %i451 = load i32, i32* @v_03
  %i452 = call i32 @func_03(i32 %i451)
  %i455 = load i32, i32* @v_03
  %i456 = call i32 @func_04(i32 1, i32 %i455)
  %i460 = sdiv i32 114514, %i380
  %i462 = srem i32 %i460, %i392
  %i466 = mul i32 114514, %i353
  %i469 = mul i32 %i358, %i369
  %i470 = add i32 %i466, %i469
  %i472 = getelementptr [11 x i8], [11 x i8]* @str.1, i32 0, i32 0
  call void @putstr(i8* %i472)
  call void @putint(i32 114514)
  call void @putch(i32 10)
  %i474 = getelementptr [11 x i8], [11 x i8]* @str.2, i32 0, i32 0
  call void @putstr(i8* %i474)
  call void @putint(i32 %i337)
  call void @putch(i32 10)
  %i476 = getelementptr [13 x i8], [13 x i8]* @str.3, i32 0, i32 0
  call void @putstr(i8* %i476)
  call void @putint(i32 %i341)
  call void @putch(i32 10)
  %i478 = getelementptr [13 x i8], [13 x i8]* @str.4, i32 0, i32 0
  call void @putstr(i8* %i478)
  call void @putint(i32 %i348)
  call void @putch(i32 10)
  %i482 = sub i32 114514, %i337
  %i484 = sub i32 %i482, %i341
  %i486 = sub i32 %i484, %i341
  %i488 = sub i32 %i486, %i348
  %i492 = add i32 114514, %i319
  %i494 = add i32 %i492, 2
  %i496 = add i32 %i494, %i332
  %i497 = getelementptr [10 x i8], [10 x i8]* @str.5, i32 0, i32 0
  call void @putstr(i8* %i497)
  %i499 = add i32 %i443, 1
  %i500 = getelementptr [9 x i8], [9 x i8]* @str.6, i32 0, i32 0
  call void @putstr(i8* %i500)
  call void @putint(i32 %i499)
  call void @putch(i32 10)
  %i503 = getelementptr [9 x i8], [9 x i8]* @str.7, i32 0, i32 0
  call void @putstr(i8* %i503)
  call void @putint(i32 %i449)
  %i504 = getelementptr [12 x i8], [12 x i8]* @str.8, i32 0, i32 0
  call void @putstr(i8* %i504)
  call void @putint(i32 %i452)
  call void @putch(i32 10)
  %i506 = getelementptr [9 x i8], [9 x i8]* @str.9, i32 0, i32 0
  call void @putstr(i8* %i506)
  call void @putint(i32 %i456)
  call void @putch(i32 10)
  %i508 = getelementptr [9 x i8], [9 x i8]* @str.10, i32 0, i32 0
  call void @putstr(i8* %i508)
  call void @putint(i32 %i462)
  call void @putch(i32 10)
  %i510 = getelementptr [9 x i8], [9 x i8]* @str.11, i32 0, i32 0
  call void @putstr(i8* %i510)
  call void @putint(i32 %i470)
  call void @putch(i32 10)
  %i512 = getelementptr [9 x i8], [9 x i8]* @str.12, i32 0, i32 0
  call void @putstr(i8* %i512)
  call void @putint(i32 %i488)
  call void @putch(i32 10)
  %i514 = getelementptr [9 x i8], [9 x i8]* @str.13, i32 0, i32 0
  call void @putstr(i8* %i514)
  call void @putint(i32 %i496)
  call void @putch(i32 10)
  %i517 = getelementptr [10 x i8], [10 x i8]* @str.14, i32 0, i32 0
  call void @putstr(i8* %i517)
  call void @putint(i32 %i445)
  %i518 = getelementptr [13 x i8], [13 x i8]* @str.15, i32 0, i32 0
  call void @putstr(i8* %i518)
  call void @putint(i32 %i447)
  call void @putch(i32 10)
  %i520 = getelementptr [11 x i8], [11 x i8]* @str.16, i32 0, i32 0
  call void @putstr(i8* %i520)
  call void @putint(i32 %i439)
  call void @putch(i32 10)
  ret i32 0
}
